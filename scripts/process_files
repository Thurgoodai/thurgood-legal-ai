import os
from google.cloud import storage, speech_v1p1beta1 as speech

# Initialize Google Cloud clients
storage_client = storage.Client()
speech_client = speech.SpeechClient()

# Set up paths
bucket_name = 'your-bucket-name'  # Replace with your bucket name
input_prefix = 'path/to/your/files'
output_prefix = 'path/to/processed/files'

# List files in the bucket
blobs = storage_client.list_blobs(bucket_name, prefix=input_prefix)
for blob in blobs:
    if blob.name.endswith(('.mp3', '.wav')):
        # Download the file locally
        file_path = f'./{blob.name}'
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        blob.download_to_filename(file_path)

        # Process the file (transcription example)
        with open(file_path, 'rb') as audio_file:
            audio = speech.RecognitionAudio(content=audio_file.read())
            config = speech.RecognitionConfig(
                encoding=speech.RecognitionConfig.AudioEncoding.LINEAR16,
                sample_rate_hertz=16000,
                language_code='en-US',
            )
            response = speech_client.recognize(config=config, audio=audio)

            # Save the transcription
            transcription_path = f'./{output_prefix}/{os.path.basename(blob.name)}.txt'
            os.makedirs(os.path.dirname(transcription_path), exist_ok=True)
            with open(transcription_path, 'w') as transcription_file:
                for result in response.results:
                    transcription_file.write(result.alternatives[0].transcript)

        # Upload the processed file back to the bucket
        processed_blob = storage_client.bucket(bucket_name).blob(f'{output_prefix}/{os.path.basename(transcription_path)}')
        processed_blob.upload_from_filename(transcription_path)
